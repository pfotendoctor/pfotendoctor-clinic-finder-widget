{"version":3,"sources":["App.js","index.js"],"names":["renderPost","post","data","title","url","author","id","authorUrl","className","key","href","target","rel","nonStickiedOnly","stickied","App","subreddit","domElement","getAttribute","useState","loading","setLoading","error","setError","setData","useEffect","fetch","then","response","json","children","slice","catch","e","console","log","length","filter","map","document","querySelectorAll","forEach","Div","ReactDOM","render","StrictMode"],"mappings":"4KAIA,SAASA,EAAWC,GAAM,IAAD,EACsBA,EAArCC,KAAQC,EADO,EACPA,MAAOC,EADA,EACAA,IAAKC,EADL,EACKA,OAAQC,EADb,EACaA,GAC9BC,EAAS,mCAA+BF,GAE9C,OACE,yBAAKG,UAAU,sBAAsBC,IAAKH,GACxC,yBAAKE,UAAU,4BAAf,aACY,uBAAGE,KAAMH,EAAWC,UAAU,2BAA2BG,OAAO,SAASC,IAAI,uBAA7E,KAAsGP,IAElH,uBAAGK,KAAMN,EAAKI,UAAU,uBAAuBG,OAAO,SAASC,IAAI,uBAAuBT,IAMhG,SAASU,EAAgBZ,GACvB,OAAQA,EAAKC,KAAKY,SAiDLC,MA9Cf,YAA8B,IACtBC,EADqB,EAAdC,WACgBC,aAAa,kBADf,EAEGC,qBAFH,mBAEpBC,EAFoB,KAEXC,EAFW,OAGDF,mBAAS,IAHR,mBAGpBG,EAHoB,KAGbC,EAHa,OAIHJ,mBAAS,IAJN,mBAIpBjB,EAJoB,KAIdsB,EAJc,KAsB3B,OAhBAC,qBAAU,WAERJ,GAAW,GACXK,MAAM,4BAAD,OAA6BV,EAA7B,UACFW,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACzB,GACLmB,GAAW,GACXG,EAAQtB,EAAKA,KAAK4B,SAASC,MAAM,EAAG,QAErCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZZ,GAAW,GACXE,EAAS,mCAEZ,CAAEP,IAGH,yBAAKR,UAAU,sBACb,wBAAIA,UAAU,yBAAd,mBACkB,uBAAGE,KAAI,+BAA0BM,GAAaJ,IAAI,uBAAlD,MAA4EI,IAE9F,yBAAKR,UAAU,wBACZY,GAAW,aACXE,GAASA,IACPpB,EAAKkC,QAAUlC,EAAKmC,OAAOxB,GAAiByB,IAAItC,IAErD,uBAAGQ,UAAU,6BAAb,4BAC4B,IAC1B,uBACEE,KAAK,6BACLE,IAAI,sBACJD,OAAO,UAHT,yBCpDW4B,SAASC,iBAAiB,kBAGlCC,SAAQ,SAAAC,GACjBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAK5B,WAAYyB,KAEnBA,O","file":"static/js/main.50f13a03.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\n// Render each post\nfunction renderPost(post){\n  const { data: { title, url, author, id } } = post\n  const authorUrl = `https://www.reddit.com/u/${author}`\n\n  return (\n    <div className=\"reddit_widget__post\" key={id}>\n      <div className=\"reddit_widget__posted_by\">\n        posted by <a href={authorUrl} className=\"reddit_widget__posted_by\" target=\"_blank\" rel=\"noopener noreferrer\">u/{author}</a>\n      </div>\n      <a href={url} className=\"reddit_widget__title\" target=\"_blank\" rel=\"noopener noreferrer\">{title}</a>\n    </div>\n  )\n}\n\n// Filter, since reddit always returns stickied posts up top\nfunction nonStickiedOnly(post){\n  return !post.data.stickied\n}\n\nfunction App({ domElement }) {\n  const subreddit = domElement.getAttribute(\"data-subreddit\")\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from reddit\n    setLoading(true)\n    fetch(`https://www.reddit.com/r/${subreddit}.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        setLoading(false);\n        setData(data.data.children.slice(0, 10));\n      })\n      .catch((e) => {\n        console.log(e)\n        setLoading(false);\n        setError('error fetching from reddit');\n      });\n  }, [ subreddit ])\n\n  return (\n    <div className=\"reddit_widget__app\">\n      <h1 className=\"reddit_widget__header\">\n        Latest posts in <a href={`https://reddit.com/r/${subreddit}`} rel=\"noopener noreferrer\">/r/{subreddit}</a>\n      </h1>\n      <div className=\"reddit_widget__inner\">\n        {loading && \"Loading...\"}\n        {error && error}\n        {!!data.length && data.filter(nonStickiedOnly).map(renderPost)}\n      </div>\n      <p className=\"reddit_widget__powered_by\">\n        This widget is powered by{\" \"}\n        <a\n          href=\"https://javascriptpros.com\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          JavaScriptPros.com\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Find all widget divs\nconst WidgetDivs = document.querySelectorAll('.reddit_widget')\n\n// Inject our React App into each\nWidgetDivs.forEach(Div => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App domElement={Div} />\n    </React.StrictMode>,\n    Div\n  );\n})\n"],"sourceRoot":""}